<?xml version="1.0"?>
<differences>

  <difference>
    <className>org/rhq/enterprise/server/cloud/StorageNodeManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.util.PageList findNotAcknowledgedStorageNodeAlerts(org.rhq.core.domain.auth.Subject)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/cloud/StorageNodeManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.util.PageList findNotAcknowledgedStorageNodeAlerts(org.rhq.core.domain.auth.Subject, org.rhq.core.domain.cloud.StorageNode)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/cloud/StorageNodeManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.util.PageList findAllStorageNodeAlerts(org.rhq.core.domain.auth.Subject)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/cloud/StorageNodeManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.util.PageList findAllStorageNodeAlerts(org.rhq.core.domain.auth.Subject, org.rhq.core.domain.cloud.StorageNode)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/cloud/StorageNodeManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.cloud.StorageNodeConfigurationComposite retrieveConfiguration(org.rhq.core.domain.auth.Subject, org.rhq.core.domain.cloud.StorageNode)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/cloud/StorageNodeManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>boolean updateConfiguration(org.rhq.core.domain.auth.Subject, org.rhq.core.domain.cloud.StorageNodeConfigurationComposite)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/cloud/StorageNodeManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.util.PageList findNotAcknowledgedStorageNodeAlerts(org.rhq.core.domain.auth.Subject, org.rhq.core.domain.cloud.StorageNode)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/cloud/StorageNodeManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.util.PageList findAllStorageNodeAlerts(org.rhq.core.domain.auth.Subject, org.rhq.core.domain.cloud.StorageNode)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/cloud/StorageNodeManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>void deployStorageNode(org.rhq.core.domain.auth.Subject, org.rhq.core.domain.cloud.StorageNode)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/cloud/StorageNodeManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>void undeployStorageNode(org.rhq.core.domain.auth.Subject, org.rhq.core.domain.cloud.StorageNode)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/bundle/BundleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>void assignBundlesToBundleGroup(org.rhq.core.domain.auth.Subject, int, int[])</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/bundle/BundleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.bundle.BundleGroup createBundleGroup(org.rhq.core.domain.auth.Subject, java.lang.String, java.lang.String)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>
  
  <difference>
    <className>org/rhq/enterprise/server/bundle/BundleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.bundle.BundleVersion createInitialBundleVersionViaByteArray(org.rhq.core.domain.auth.Subject, int, byte[])</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/bundle/BundleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.bundle.BundleVersion createInitialBundleVersionViaFile(org.rhq.core.domain.auth.Subject, int, java.io.File)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/bundle/BundleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.bundle.BundleVersion createInitialBundleVersionViaRecipe(org.rhq.core.domain.auth.Subject, int, java.lang.String)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/bundle/BundleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.bundle.BundleVersion createInitialBundleVersionViaURL(org.rhq.core.domain.auth.Subject, int, java.lang.String)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/bundle/BundleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.bundle.BundleVersion createInitialBundleVersionViaURL(org.rhq.core.domain.auth.Subject, int, java.lang.String, java.lang.String, java.lang.String)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/bundle/BundleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>void deleteBundleGroups(org.rhq.core.domain.auth.Subject, int[])</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/bundle/BundleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>org.rhq.core.domain.util.PageList findBundleGroupsByCriteria(org.rhq.core.domain.auth.Subject, org.rhq.core.domain.criteria.BundleGroupCriteria)</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/bundle/BundleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>void unassignBundlesFromBundleGroup(org.rhq.core.domain.auth.Subject, int, int[])</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/authz/RoleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>void addBundleGroupsToRole(org.rhq.core.domain.auth.Subject, int, int[])</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/authz/RoleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>void addRolesToBundleGroup(org.rhq.core.domain.auth.Subject, int, int[])</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/authz/RoleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>void removeBundleGroupsFromRole(org.rhq.core.domain.auth.Subject, int, int[])</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/authz/RoleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>void removeRolesFromBundleGroup(org.rhq.core.domain.auth.Subject, int, int[])</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

  <difference>
    <className>org/rhq/enterprise/server/authz/RoleManagerRemote</className>
    <differenceType>7012</differenceType>  <!-- method added to an interface -->
    <method>void setAssignedBundleGroups(org.rhq.core.domain.auth.Subject, int, int[])</method>
    <justification>Adding a method to a remote API interface is safe. This is newly implemented functionality.</justification>
  </difference>

</differences>
